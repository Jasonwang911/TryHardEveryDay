version: '3'
services: 
  editor-server:  # service name docker容器1
    build: 
      context: .   # 当前目录
      dockerfile: Dockerfile  # 基于 Dockerfile 构建
    image: editor-server  # 依赖于当前 Dockerfile 创建出来的镜像
    container_name: editor-server
    ports: 
      - 8081:3000   # 端口映射  宿主机端口:容器端口
  editor-redis:   # service name docker容器2
      image: redis   # 使用 redis 镜像
      container_name: editor-redis
      ports: 
        # 宿主机，可以用 127.0.0.1:6378 即可连接容器中的数据库 ` redis-cli -h 127.0.0.1 -p 6378`
        # 但是，其他 docker 容器不能，因为此时 127.0.0.1 是docker容器本身，而不是宿主机
        # 其他 docker 容器如果想连接需要设置 port 为docker的service name
        - 6378:6379
      environment:
        - TZ=Asia/beijing  # 设置时区
  editor-mysql: 
      image: mysql
      container_name: editor-mysql
      restart: always # 出错重启
      privileged: true  # 高权限，执行下面的 mysql/init
      command: --default-authentication-plugin=mysql_native_password  # 远程访问
      ports: 
        - 3305:3306 
      volumes: 
        - .docker-volumes/mysql/log:/var/log/mysql  # 日志记录
        - .docker-volumes/mysql/data:/var/lib/mysql  # 数据持久化
        - .docker/init:/docker-entrypoint-initdb.d  # 初始化 sql
      environment: 
        - MYSQL_DATABASE=boya-lego-course  # 初始化容器时创建数据库
        - MYSQL_ROOT_PASSWORD=Mysql_2021
        - TZ=Asia/beijing  # 设置时区
    editor-mongo: 
      image: mongo 
      container_name: editor-mongo
      restart: always
      volumes: 
        - '.docker-volumes/mongo/data:/data/db' # 数据持久化
      environment: 
        - MONGO_INITBD_DATABASE=boya_lego_course
        - TZ=Asia/beijing  # 设置时区
      ports:
        -'27016:27017'