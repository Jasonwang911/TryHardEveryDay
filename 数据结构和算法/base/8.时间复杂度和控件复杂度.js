/*
 *   1. 时间复杂度衡量算法执行时间随着输入规模增加而增长的关系，是一种对算法的分类
 *   2. 随着规模增长O(n^2)的算法比O(n)的算法增长更快
 *   3. 在T= an^2 + bn + c 的算法中，n^2起决定作用
 *   4. 通常的，算法在更大输入集合的表现更有意义
 *
 */


// 一维数组
function sum(A) { // 共计执行次数 T = 3n + 4    空间复杂度O(n)
  let sum = 0 // 执行1
  //      执行1    执行 n+1     执行n
  for (let i = 0; i < A.length; i++) {
    sum += A[i] // 执行n
  }
  return sum // 执行1
}

// 二维数组   T = 3n^2 + 4n + 4   空间复杂度O(n^2)